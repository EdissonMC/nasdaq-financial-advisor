"""
Pydantic models for LLM operations
"""
from typing import List, Optional, Dict, Any
from pydantic import BaseModel, Field


class LLMRequest(BaseModel):
    """Request model for LLM operations"""
    prompt: str = Field(..., description="Prompt for the LLM")
    max_tokens: Optional[int] = Field(1000, description="Maximum number of tokens to generate")
    temperature: Optional[float] = Field(0.7, description="Temperature for generation randomness")
    model_id: Optional[str] = Field(None, description="ID of the model to use")


class LLMResponse(BaseModel):
    """Response model from LLM operations"""
    text: str = Field(..., description="Text generated by the LLM")
    model_id: str = Field(..., description="Model used for generation")
    usage: Dict[str, Any] = Field(default_factory=dict, description="Usage information")
    
    
class ChatMessage(BaseModel):
    """Individual message in a conversation"""
    role: str = Field(..., description="Role of the message: user, assistant, system")
    content: str = Field(..., description="Content of the message")


class ChatRequest(BaseModel):
    """Request model for conversational chat"""
    messages: List[ChatMessage] = Field(..., description="List of conversation messages")
    max_tokens: Optional[int] = Field(1000, description="Maximum number of tokens to generate")
    temperature: Optional[float] = Field(0.7, description="Temperature for generation randomness")
    model_id: Optional[str] = Field(None, description="ID of the model to use")


class ChatResponse(BaseModel):
    """Response model from chat operations"""
    message: ChatMessage = Field(..., description="Response message from the assistant")
    model_id: str = Field(..., description="Model used for generation")
    usage: Dict[str, Any] = Field(default_factory=dict, description="Usage information")